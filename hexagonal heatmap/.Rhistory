labs(color = "Price",
size = "# of listings")
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#0000FF", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(2, 5)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "	#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(2, 5)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(2, 5)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1)
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1) +
theme_map()
mapa_bcn_minimalist <- get_googlemap(center = 'Barcelona, Spain', zoom = 13, maptype = "roadmap",
style = "&style=feature:all|element:labels|visibility:off" )
mapa_bcn_minimalist_zoom <- get_googlemap(center = 'Barcelona, Spain', zoom = 14, maptype = "roadmap",
style = "&style=feature:all|element:labels|visibility:off" )
mapa_bcn_minimalist %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1)
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(2, 5)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(1, 3)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(1, 3)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
df %>%
ggplot(aes(price, fill = neighbourhood_group)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20) +
scale_x_log10(labels = euros ) +
labs(fill = NULL, x = "price per night")
df %>%
ggplot(aes(price + 1, fill = neighbourhood_group)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20) +
scale_x_log10(labels = euros ) +
labs(fill = NULL, x = "price per night")
df$price <- df$price + 1
euros <- scales::dollar_format(suffix = "€", prefix = "")
df %>%
ggplot(aes(price , fill = neighbourhood_group)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20) +
scale_x_log10(labels = euros ) +
labs(fill = NULL, x = "price per night")
df %>%
ggplot(aes(longitude, latitude, color = log(price))) +
geom_point(alpha = 0.2) +
scale_color_viridis_c()
df %>%
ggplot(aes(longitude, latitude, color = log(price))) +
geom_point(alpha = 0.2, size = 0.1) +
scale_color_viridis_c()
df %>%
ggplot(aes(longitude, latitude, color = log(price))) +
geom_point(alpha = 0.2, size = 0.5) +
scale_color_viridis_c()
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 50) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1) +
theme_map()
mapa_bcn <-
get_map(location = "Barcelona, Spain",
zoom = 13, # 10 corresponds to city
color = "color",
maptype = "roadmap", # “terrain”, “satellite”, “roadmap”, “hybrid”
scale = 1,
source= "google")
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1) +
theme_map()
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1, alpha = 0.3) +
theme_map()
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'black', size = 0.1, alpha = 0.3) +
theme_map()
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.3) +
theme_map()
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
mapa_bcn %>%
ggmap() +
stat_density2d(aes(fill = ..level..), alpha = .5,
geom = "polygon", data = df) +
scale_fill_viridis_c()
mapa_bcn %>%
ggmap(data = df, aes(x = longitude, y = latitude)) +
stat_density2d(aes(fill = ..level..), alpha = .5,
geom = "polygon", data = df) +
scale_fill_viridis_c()
mapa_bcn %>%
ggmap(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()  +
theme_map()
ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
mapa_bcn %>%
ggmap(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
ggplot(data = df, aes(x = longitude, y = latitude)) +
geom_density_2d_filled(alpha = 0.5)
mapa_bcn %>%
ggmap(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon", fill= stat(level) ) +
scale_fill_viridis_c()
mapa_bcn %>%
ggmap() +
stat_density2d( data = df, aes(x = longitude, y = latitude), alpha = .5, geom = "polygon", fill= stat(level) ) +
scale_fill_viridis_c()
mapa_bcn %>%
ggmap() +
stat_density2d( data = df, aes(x = longitude, y = latitude),
alpha = .5, geom = "polygon", fill= ..level.. ) +
scale_fill_viridis_c()
install.packages("ggmap")
library(tidyverse)
library(readr)
df <- read_csv("Desktop/DS/web/personalweb/hexagonal heatmap/listings.csv")
View(df)
dim(df)
names(df)
df$price <- df$price + 1
euros <- scales::dollar_format(suffix = "€", prefix = "")
df %>%
ggplot(aes(price , fill = neighbourhood_group)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20) +
scale_x_log10(labels = euros ) +
labs(fill = NULL, x = "price per night")
df %>%
ggplot(aes(longitude, latitude, color = log(price))) +
geom_point(alpha = 0.2, size = 0.5) +
scale_color_viridis_c()
# Hexagonal heatmap of 2d bin counts
# https://ggplot2.tidyverse.org/reference/geom_hex.html
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 50) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
################################################################################
library(ggthemes)
# Geocoding API
# https://console.cloud.google.com/google/maps-apis
register_google(key = "AIzaSyABMFSHi7sHOvtCpMbeuNrh9wtEsw-x1Jc")
geocode("Barcelona, Spain", source = "google")
mapa_bcn <-
get_map(location = "Barcelona, Spain",
zoom = 13, # 10 corresponds to city
color = "color",
maptype = "roadmap", # “terrain”, “satellite”, “roadmap”, “hybrid”
scale = 1,
source= "google")
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
# ggplot’s stat_density2d, which uses MASS::kde2d on the backend to estimate the density using a bivariate normal kernel.
ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
ggplot(data = df, aes(x = longitude, y = latitude)) +
geom_density_2d_filled(alpha = 0.5)
mapa_bcn %>%
ggmap(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
# mapa_bcn %>%
#   ggmap() +
#   stat_density2d( data = df, aes(x = longitude, y = latitude),
#                   alpha = .5, geom = "polygon", fill= ..level.. ) +
#   scale_fill_viridis_c()
################################################################################
mapa_bcn_minimalist <- get_googlemap(center = 'Barcelona, Spain', zoom = 13, maptype = "roadmap",
style = "&style=feature:all|element:labels|visibility:off" )
mapa_bcn_minimalist_zoom <- get_googlemap(center = 'Barcelona, Spain', zoom = 14, maptype = "roadmap",
style = "&style=feature:all|element:labels|visibility:off" )
#'feature:administrative.country|element:labels|visibility:off
mapa_bcn_minimalist %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1)
aggregated_lat_lon <- df %>%
group_by(latitude = round(latitude, 3),
longitude = round(longitude, 3)) %>%
summarize(price = mean(price),
n = n()) %>%
filter(n >= 5)
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(1, 3)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
# 2 points ommited
library(ggmap)
register_google(key = "AIzaSyABMFSHi7sHOvtCpMbeuNrh9wtEsw-x1Jc")
geocode("Barcelona, Spain", source = "google")
mapa_bcn <-
get_map(location = "Barcelona, Spain",
zoom = 13, # 10 corresponds to city
color = "color",
maptype = "roadmap", # “terrain”, “satellite”, “roadmap”, “hybrid”
scale = 1,
source= "google")
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
# ggplot’s stat_density2d, which uses MASS::kde2d on the backend to estimate the density using a bivariate normal kernel.
ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
ggplot(data = df, aes(x = longitude, y = latitude)) +
geom_density_2d_filled(alpha = 0.5)
mapa_bcn %>%
ggmap(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
# mapa_bcn %>%
#   ggmap() +
#   stat_density2d( data = df, aes(x = longitude, y = latitude),
#                   alpha = .5, geom = "polygon", fill= ..level.. ) +
#   scale_fill_viridis_c()
################################################################################
mapa_bcn_minimalist <- get_googlemap(center = 'Barcelona, Spain', zoom = 13, maptype = "roadmap",
style = "&style=feature:all|element:labels|visibility:off" )
mapa_bcn_minimalist_zoom <- get_googlemap(center = 'Barcelona, Spain', zoom = 14, maptype = "roadmap",
style = "&style=feature:all|element:labels|visibility:off" )
#'feature:administrative.country|element:labels|visibility:off
mapa_bcn_minimalist %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1)
aggregated_lat_lon <- df %>%
group_by(latitude = round(latitude, 3),
longitude = round(longitude, 3)) %>%
summarize(price = mean(price),
n = n()) %>%
filter(n >= 5)
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(1, 3)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
# 2 points ommited
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
dim(df)
mapa_bcn_minimalist %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
ggplot(data = df, aes(x = longitude, y = latitude)) +
geom_density_2d_filled(alpha = 0.5)
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 50) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
hex_heatmap <- df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
str(hex_heatmap)
hex_heatmap$layers
ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c()
ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c() +
theme_bw()
ggplot(data = df, aes(x = longitude, y = latitude)) +
geom_density_2d_filled(alpha = 0.5)
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 50) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
hex_heatmap <- df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 50) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
hex_heatmap
hex_heatmap <- df %>%
ggplot(aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
density_heatmap <- ggplot(data = df, aes(x = longitude, y = latitude)) +
stat_density2d( alpha = .5, geom = "polygon") +
scale_fill_viridis_c() #+
mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
mapa_bcn_minimalist %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
points_map <- mapa_bcn %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'darkblue', size = 0.1, alpha = 0.2) +
theme_map()
mapa_bcn_minimalist %>%
ggmap() +
geom_point(data = df, aes(x = longitude, y = latitude), color = 'blue', size = 0.1)
ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(1, 3)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
agg_freq_map <- ggmap(mapa_bcn_minimalist) +
geom_point(aes(longitude, latitude, size = n, color = price ),
data = aggregated_lat_lon) +
scale_color_gradient2(low = "#00008B", high = "darkred", midpoint = 2 ,
trans = "log10", labels = euros) +
scale_size_continuous(range = c(1, 3)) +
theme_map() +
labs(color = "Price",
size = "# of listings")
agg_hex_map <- ggmap(mapa_bcn_minimalist) +
ggplot(data= df, aes(longitude, latitude, z = log(price))) +
stat_summary_hex(alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
agg_hex_map <- ggmap(mapa_bcn_minimalist) +
stat_summary_hex(data= df, aes(longitude, latitude, z = log(price)),
alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
agg_hex_map
agg_hex_map <- ggmap(mapa_bcn_minimalist) +
coord_cartesian() +
stat_summary_hex(data= df, aes(longitude, latitude, z = log(price)),
alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
agg_hex_map
agg_hex_map <- ggmap(mapa_bcn) +
coord_cartesian() +
stat_summary_hex(data= df, aes(longitude, latitude, z = log(price)),
alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
agg_hex_map
agg_hex_map <- ggmap(mapa_bcn_minimalist) +
coord_cartesian() +
stat_summary_hex(data= df, aes(longitude, latitude, z = log(price)),
alpha = 0.8, bins = 70) +
scale_fill_viridis_c() +
labs(fill = "Mean price (log)")
agg_hex_map
sum( df$price == 0 )
plots_to_save <- c(hex_heatmap, density_heatmap, points_map, agg_freq_map, agg_hex_map)
names_to_save <- c("hex_heatmap", "density_heatmap", "points_map", "agg_freq_map", "agg_hex_map")
names_to_save <- paste0( c("hex_heatmap", "density_heatmap", "points_map", "agg_freq_map", "agg_hex_map"), ".png" )
names_to_save
# Part de l'eixample i de primera linia de costa de la platja del Bogatell
700/500
# Part de l'eixample i de primera linia de costa de la platja del Bogatell
14/1.4
ggsave(filename = names_to_save, plot = plots_to_save, device = png(), width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save, plot = plots_to_save, width = 14, height = 10, units = "cm")
ggsave(filename = "hex_heatmap.png", plot = hex_heatmap, width = 14, height = 10, units = "cm")
ls
dir()
getwd()
setwd("~/Desktop/DS/web/personalweb/hexagonal heatmap")
mapply(ggsave, filename = names_to_save, plot = plots_to_save, width = 14, height = 10, units = "cm")
ggplot2::ggsave
plots_to_save <- c(hex_heatmap, density_heatmap, points_map, agg_freq_map, agg_hex_map)
names_to_save <- paste0( c("hex_heatmap", "density_heatmap", "points_map", "agg_freq_map", "agg_hex_map"), ".png" )
mapply(ggplot2::ggsave, filename = names_to_save, plot = plots_to_save, width = 14, height = 10, units = "cm")
mapply(ggplot2::ggsave, filename = names_to_save, plot = plots_to_save, MoreArgs = list(width = 14, height = 10, units = "cm" ) )
mapply(ggplot2::ggsave, filename = names_to_save, plot = plots_to_save, MoreArgs = list(width = 14, height = 10, units = "cm" ) )
plots_to_save <- c(hex_heatmap, density_heatmap, points_map, agg_freq_map, agg_hex_map)
names_to_save <- paste0( c("hex_heatmap", "density_heatmap", "points_map", "agg_freq_map", "agg_hex_map"), ".png" )
ggsave(filename = names_to_save[1], plot = plots_to_save[1], width = 14, height = 10, units = "cm")
names_to_save[1]
plots_to_save[1]
hex_heatmap
plots_to_save <- c(hex_heatmap, density_heatmap, points_map, agg_freq_map, agg_hex_map)
plots_to_save
plots_to_save[1]
hex_heatmap
plots_to_save <- list(hex_heatmap, density_heatmap, points_map, agg_freq_map, agg_hex_map)
names_to_save <- paste0( c("hex_heatmap", "density_heatmap", "points_map", "agg_freq_map", "agg_hex_map"), ".png" )
ggsave(filename = names_to_save[1], plot = plots_to_save[1], width = 14, height = 10, units = "cm")
ggsave(filename = hex_heatmap, plot = plots_to_save[1], width = 14, height = 10, units = "cm")
ggsave(filename = hex_heatmap, plot = plots_to_save[1], device= "png", width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save[1], plot = hex_heatmap, device= "png", width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save[2], plot = plots_to_save[2], device= "png", width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save[1], plot = hex_heatmap, device= "png", width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save[2], plot = density_heatmap, device= "png", width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save[3], plot = points_map, device= "png", width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save[4], plot = agg_freq_map, device= "png", width = 14, height = 10, units = "cm")
ggsave(filename = names_to_save[5], plot = agg_hex_map, device= "png", width = 14, height = 10, units = "cm")
